<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.MyMapper">
    <!--查询指定学生信息-->
    <select id="getStudentInfo" resultType="com.example.demo.dto.StuDto">
        select
            a.id as stuId,
            a.age as stuAge,
            a.name as stuName,
            b.className as className
        from student a
        left join class b on a.classId = b.classId
        where a.id=#{id}
    </select>


    <!--查询所有学生信息-->
    <select id="selectAll" resultType="com.example.demo.dto.StuDto">
        select
            a.id as stuId,
            a.age as stuAge,
            a.name as stuName,
            b.className as className
        from student a
        left join class b on a.classId = b.classId
        order by a.id
    </select>


    <!--分页查询-->
    <select id="selectPage" resultType="com.example.demo.dto.StuDto" parameterType="map">
        select
            a.id as stuId,
            a.age as stuAge,
            a.name as stuName,
            b.className as className
        from student a
                 left join class b on a.classId = b.classId
        order by a.id
    </select>

    <!--模糊查询-->
        <!--<select id="searchByKeyWord" resultType="com.example.demo.model.Student">-->
        <!--    select * from student where age like "%"#{keyword}"%" or name like "%"#{keyword}"%"-->
        <!--</select>-->
    <!--选择所要查询的字段，并进行关键字查询-->
    <select id="searchByKeyWord" resultType="com.example.demo.dto.StuDto">
        select
        a.id as stuId,
        a.age as stuAge,
        a.name as stuName,
        b.className as className
        from student a
        left join class b on a.classId = b.classId
        where
        <if test="field == 'all'">
            name like "%"#{keyword}"%" or age like "%"#{keyword}"%"
        </if>
        <if test="field == 'age'">
            age like "%"#{keyword}"%"
        </if>
        <if test="field == 'name'">
            name like "%"#{keyword}"%"
        </if>
        order by a.id
    </select>

    <!--自定义的map集合-->
    <resultMap id="classInfo" type="com.example.demo.dto.ClassDto">
        <id  column="id" property="classId"></id>
        <result  column="name" property="className"></result>
        <!--配置集合信息-->
        <collection property="stuInfo" ofType="com.example.demo.model.Student">
            <id column="stuId" property="id"></id>
            <result column="stuAge" property="age"></result>
            <result column="stuName" property="name"></result>
            <result column="classId" property="classId"></result>
        </collection>
    </resultMap>

    <!--班级信息查询-->
    <select id="searchClassInfoByClassId" resultMap="classInfo">
        select
            s.id as stuId,
            s.age as stuAge,
            s.name as stuName,
            s.classId as classId,
            c.className as name,
            c.classId as id
        from student s,class c
        where s.classId = c.classId
        <if test="classId != null">
            and c.classId=#{classId}
        </if>
    </select>

    <!--添加学生信息-->
    <insert id="addStudent" parameterType="com.example.demo.model.Student">
        insert into student(id,age,name,classId) values(#{id},#{age},#{name},#{classId})
    </insert>


    <!--删除学生信息-->
    <delete id="deleteStudentById" parameterType="int">
        delete from student where id=#{id}
    </delete>


    <!--根据id修改学生信息-->
    <update id="modifyStudent" parameterType="com.example.demo.model.Student">
        update student
        <set>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="classId != null">
                classId = #{classId}
            </if>
        </set>
        where id=#{id}
    </update>
</mapper>
